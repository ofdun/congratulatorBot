package bots

import (
	tele "gopkg.in/telebot.v3"
	"telegramBot/internal/download"
	"telegramBot/internal/storage"
	"time"
)

type TelegramBot struct {
	*tele.Bot
}

func NewTelegramBot(token string) (*TelegramBot, error) {
	bot, err := tele.NewBot(tele.Settings{
		Token:  token,
		Poller: &tele.LongPoller{Timeout: 10 * time.Second},
	})
	if err != nil {
		return nil, err
	}
	return &TelegramBot{bot}, nil
}

func StartTelegramBot(bot *TelegramBot) {
	bot.Handle(tele.OnText, onText)
	bot.Handle("/start", onStart)

	bot.Start()
}

func createMenu(isMailing bool) *tele.ReplyMarkup {
	markup := tele.ReplyMarkup{}
	if isMailing {
		markup.Reply(markup.Row(
			markup.Text("–£—Ä–∞!üéâ"),
			markup.Text("–ü–æ–∑–¥—Ä–∞–≤—å –º–µ–Ω—èü•≥"),
			markup.Text("–û—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—Éüì¨"),
		))
		return &markup
	} else {
		markup.Reply(markup.Row(
			markup.Text("–£—Ä–∞!üéâ"),
			markup.Text("–ü–æ–∑–¥—Ä–∞–≤—å –º–µ–Ω—èü•≥"),
			markup.Text("–ü–æ–¥–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—Éüì¨"),
		))
		return &markup
	}

}

func onStart(c tele.Context) error {
	markup := createMenu(false)
	return c.Send("–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–∑–¥—Ä–∞–≤–ª—é —Ç–µ–±—è —Å –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º!", markup)
}

func onText(c tele.Context) error {
	switch c.Text() {
	case "–£—Ä–∞!üéâ":
		return c.Send("–£—Ä–∞!üéâ")
	case "–ü–æ–∑–¥—Ä–∞–≤—å –º–µ–Ω—èü•≥":
		{
			postcardPath, err := storage.GetRandomPostcardPath()
			if err != nil {
				return err
			}

			markup := createMenu(false)
			if postcardPath == "" {
				return c.Send("–°–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ :(", markup)
			}

			file := tele.FromDisk(postcardPath)
			if download.IsVideo(postcardPath) {
				postcard := &tele.Video{File: file}
				return c.Send(postcard, markup)
			} else {
				postcard := &tele.Photo{File: file}
				return c.Send(postcard, markup)
			}
		}
	case "–ü–æ–¥–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—Éüì¨":
		{
			return c.Send("–ß—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –Ω–∞–ø–∏—à–∏ /time *time*, –Ω–∞–ø—Ä–∏–º–µ—Ä /time 08:30")
		}
	case "–û—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—Éüì¨":
		{
			//TODO delete user from db
			return c.Send("–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞üòà")
		}
	}

	return nil
}
